{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Documents/Web Dev Courses/ReactLearning /react-complete-guide/src/components/Log/FilmLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoggedFilm from './LoggedFilm';\nimport Card from '../UI/Card';\nimport EntriesFilter from \"../UI/EntriesFilter\";\nimport './FilmLog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmLog = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2023');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"films\",\n    children: [/*#__PURE__*/_jsxDEV(EntriesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), props.entries.map(entry, index => /*#__PURE__*/_jsxDEV(LoggedFilm, {\n      title: entry.title,\n      rating: entry.rating,\n      date: entry.date\n    }, entry.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(FilmLog, \"dgRXrwp1OOAuhAZdn1AflYhGCDk=\");\n_c = FilmLog;\nexport default FilmLog;\nvar _c;\n$RefreshReg$(_c, \"FilmLog\");","map":{"version":3,"names":["React","useState","LoggedFilm","Card","EntriesFilter","FilmLog","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","entries","map","entry","index","title","rating","date","id"],"sources":["/Users/michael/Documents/Web Dev Courses/ReactLearning /react-complete-guide/src/components/Log/FilmLog.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport LoggedFilm from './LoggedFilm'\nimport Card from '../UI/Card'\nimport EntriesFilter from \"../UI/EntriesFilter\";\nimport './FilmLog.css'\n\nconst FilmLog = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2023');\n\n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n    }\n\n    return (\n        <Card className=\"films\">\n            <EntriesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n            {props.entries.map(entry, index =>\n                <LoggedFilm\n                key={entry.id}\n                    title={entry.title}\n                    rating={entry.rating}\n                    date={entry.date}\n                />\n            )}\n        </Card>\n    )\n}\n\nexport default FilmLog;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAO,eAAe;AAAA;AAEtB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMQ,mBAAmB,GAAGC,YAAY,IAAI;IACxCF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;EAED,oBACI,QAAC,IAAI;IAAC,SAAS,EAAC,OAAO;IAAA,wBACnB,QAAC,aAAa;MAAC,QAAQ,EAAEH,YAAa;MAAC,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG,EAC7EH,KAAK,CAACK,OAAO,CAACC,GAAG,CAACC,KAAK,EAAEC,KAAK,iBAC3B,QAAC,UAAU;MAEP,KAAK,EAAED,KAAK,CAACE,KAAM;MACnB,MAAM,EAAEF,KAAK,CAACG,MAAO;MACrB,IAAI,EAAEH,KAAK,CAACI;IAAK,GAHhBJ,KAAK,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA,QAIX,CACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEf,CAAC;AAAA,GApBKb,OAAO;AAAA,KAAPA,OAAO;AAsBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}